---
import { nanoid } from 'nanoid'
interface Props {
  autoEval: boolean;
  includeAbove: boolean;
}

const buttonID = 'button_' + nanoid(4)
const wrapperID = 'runner_' + nanoid(4)

const { autoEval = false, includeAbove = false } = Astro.props
---

<script-runner id={ wrapperID }>
  <button id={buttonID} data-eval={autoEval} data-incabv={includeAbove}>
    Execute {includeAbove && '*'}
  </button>
</script-runner>

<style is:global>
pre {
  border-color: var(--gray-dark);
}
pre.hov {
  border-color: var(--gray);
}
</style>

<script>
const getAllPreAboveThisTextContent = (button: HTMLButtonElement) => {
  const buttonRect = button.getBoundingClientRect()
  const preElements = document.querySelectorAll('pre')
  let plainTextAbove = ''

  preElements.forEach(pre => {
    const preRect = pre.getBoundingClientRect();
    if (preRect.bottom <= buttonRect.top) {
      plainTextAbove += pre.textContent
    }
  });

  return plainTextAbove;
}
const evalInContext = (js: string, context: any) => {
  return function() { return eval(js); }.call(context);
}
interface ScriptRunner extends HTMLElement {
  button: HTMLButtonElement;
  pre: HTMLPreElement;
}
class ScriptRunner extends HTMLElement {
  constructor() {
    super();
    this.button = this.querySelector('button')!
    this.pre = this.previousElementSibling! as HTMLPreElement
  }
  connectedCallback() {
    if (this.button.dataset.eval) {
      setTimeout(() => this.button.click(), 0)
    }
    this.button.addEventListener('mouseenter', () => {
      this.pre.className = 'hov'
    })
    this.button.addEventListener('mouseleave', () => {
      this.pre.className = ''
    })
    this.button.addEventListener('click', () => {
      if (this.button.dataset.incabv) {
        let text = getAllPreAboveThisTextContent(this.button)
        evalInContext(text ?? "", this)
      } else {
        evalInContext(this.pre.textContent ?? "", this)
      }
      // TODO: make this less violent
      this.pre.className = ''
      this.button.className = 'hidden'
    })
  }
}
customElements.define('script-runner', ScriptRunner);
</script>

<style is:global>
script-runner canvas {
  background: var(--gray);
  border-radius: 3px;
  display: block;
  margin-top: 1em;
}
</style>

<style>
script-runner {
  margin-bottom: 2em;
  display:block;
}
script-runner button {
  font-family: 'MicroKnight', sans-serif;
  font-size: 1.0em;
  padding: 0.4em 0.8em 0.35em;
  background: var(--black);
  border: 2px solid var(--gray);
  border-radius: 3px;
  color: var(--gray);
  margin-left: 0.3em;
}
script-runner button:focus,
script-runner button:active,
script-runner button:hover {
  background: var(--primary);
  border-color: var(--primary);
  color: var(--black);
  cursor: pointer;
}
script-runner button:disabled {
  color: var(--gray-dark);
  border-color: var(--gray-dark);
}
script-runner button:disabled:hover,
script-runner button:disabled:active {
  background: transparent;
  color: var(--gray-dark);
  border-color: var(--gray-dark);
  cursor: not-allowed;
}
</style>
